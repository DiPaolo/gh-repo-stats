name: Build & Package
# run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  build:
    strategy:
      matrix:
        os: [
          'ubuntu-22.04',
#          'windows-2019',
          'macos-13'
        ]
        python-version: ["3.11"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}@${{ matrix.os}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with ruff
        run: |
          pip install ruff
          # stop the build if there are Python syntax errors or undefined names
          ruff --format=github --select=E9,F63,F7,F82 --target-version=py311 .
          # default set of ruff rules with GitHub Annotations
          ruff --format=github --target-version=py37 .
#      - name: Test with pytest
#        run: |
#          pip install pytest
#          pytest
      - name: 'Building binaries: GUI & CLI'
        run: |
          pip install pyinstaller
          pyinstaller --name git_stats_plate_gen --console --path .venv/lib/python3.11/site-packages --onedir gspg/cli/__main__.py
          ls -l dist
          ls -l dist/git_stats_plate_gen
          
          if [ "$RUNNER_OS" == "Linux" ]; then
            echo "== DIPAOLO == Linux"
            ls -l dist/git_stats_plate_gen/kaleido
            echo "== DIPAOLO == removing kaleido executable"
            rm -rf dist/git_stats_plate_gen/kaleido/executable/bin/kaleido
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo "== DIPAOLO == MacOS"
            echo "== DIPAOLO == removing kaleido executable"
            rm -rf dist/git_stats_plate_gen/kaleido/executable/bin/kaleido
            echo "== DIPAOLO == trying to compress"
            tar -czvf git_stats_plate_gen.tar.gz dist/git_stats_plate_gen
            echo "== DIPAOLO == list dist"
            ls -lh dist
            echo "== DIPAOLO == list cur dir"
            ls -lh .
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo "== DIPAOLO == Windows"
            Compress-Archive -Path dist/git_stats_plate_gen -Destination git_stats_plate_gen.zip
          fi
      - name: Packaging binaries
        run: |
          echo "Will be done soon"
      - name: Uploading binaries
        uses: actions/upload-artifact@v3
        with:
          name: git_stats_plate_gen_cli_${{matrix.os}}_b${{github.run_number}}
          path: git_stats_plate_gen.tar.gz